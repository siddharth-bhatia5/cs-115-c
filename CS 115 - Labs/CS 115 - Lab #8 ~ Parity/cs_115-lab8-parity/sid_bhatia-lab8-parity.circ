<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
  This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).

  <lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Base" name="2">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="ParityGenerator"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="2" map="Button2" name="Menu Tool"/>
    <tool lib="2" map="Button3" name="Menu Tool"/>
    <tool lib="2" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="2" name="Poke Tool"/>
    <tool lib="2" name="Edit Tool"/>
    <tool lib="2" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="facing" val="south"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="XOR">
    <a name="circuit" val="XOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <appear>
      <circ-port height="10" pin="350,410" width="10" x="95" y="65"/>
      <circ-port height="8" pin="70,310" width="8" x="66" y="46"/>
      <circ-port height="8" pin="140,310" width="8" x="86" y="46"/>
      <path d="M71,51 Q75,61 79,51" fill="none" stroke="#808080" stroke-width="2"/>
      <rect fill="none" height="30" stroke="#000000" stroke-width="2" width="50" x="50" y="50"/>
      <circ-anchor facing="east" height="6" width="6" x="97" y="57"/>
    </appear>
    <comp lib="2" loc="(314,250)" name="Text">
      <a name="text" val="Use minterm expansion to create an XOR gate using AND + OR gates"/>
    </comp>
    <comp lib="0" loc="(70,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="0" loc="(350,410)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="0" loc="(140,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
  </circuit>
  <circuit name="ParityGenerator">
    <a name="circuit" val="ParityGenerator"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(290,410)" to="(350,410)"/>
    <wire from="(140,400)" to="(230,400)"/>
    <wire from="(350,400)" to="(510,400)"/>
    <wire from="(500,390)" to="(520,390)"/>
    <wire from="(190,330)" to="(190,370)"/>
    <wire from="(350,310)" to="(350,320)"/>
    <wire from="(190,330)" to="(530,330)"/>
    <wire from="(350,400)" to="(350,410)"/>
    <wire from="(150,270)" to="(150,480)"/>
    <wire from="(220,270)" to="(220,320)"/>
    <wire from="(520,390)" to="(520,480)"/>
    <wire from="(140,400)" to="(140,480)"/>
    <wire from="(270,400)" to="(270,480)"/>
    <wire from="(280,400)" to="(280,480)"/>
    <wire from="(510,400)" to="(510,480)"/>
    <wire from="(190,310)" to="(190,330)"/>
    <wire from="(150,270)" to="(220,270)"/>
    <wire from="(230,400)" to="(270,400)"/>
    <wire from="(190,370)" to="(230,370)"/>
    <wire from="(220,320)" to="(350,320)"/>
    <wire from="(530,330)" to="(530,480)"/>
    <wire from="(280,400)" to="(350,400)"/>
    <comp lib="2" loc="(830,361)" name="Text">
      <a name="text" val="1 0 0 |       1"/>
    </comp>
    <comp lib="0" loc="(190,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="0" loc="(320,650)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Parity"/>
    </comp>
    <comp lib="2" loc="(141,27)" name="Text">
      <a name="text" val="Input Bits"/>
    </comp>
    <comp lib="2" loc="(497,68)" name="Text"/>
    <comp lib="2" loc="(829,306)" name="Text">
      <a name="text" val="0 0 0 |       1"/>
    </comp>
    <comp lib="1" loc="(500,390)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(830,342)" name="Text">
      <a name="text" val="0 1 0 |       1"/>
    </comp>
    <comp lib="1" loc="(160,530)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(566,115)" name="Text">
      <a name="text" val="WRITE YOUR NAME AND PLEDGE SOMEWHERE IN THIS CIRCUIT"/>
    </comp>
    <comp lib="2" loc="(839,282)" name="Text">
      <a name="text" val="x, y, z | f(x,y,z)"/>
    </comp>
    <comp lib="2" loc="(831,399)" name="Text">
      <a name="text" val="1 0 1 |        0"/>
    </comp>
    <comp lib="2" loc="(717,177)" name="Text">
      <a name="text" val="I pledge my honor that I have abided by the Stevens Honor System."/>
    </comp>
    <comp lib="1" loc="(230,400)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(651,144)" name="Text">
      <a name="text" val="Siddharth Bhatia"/>
    </comp>
    <comp lib="2" loc="(523,27)" name="Text">
      <a name="text" val="Write your parity circuit here"/>
    </comp>
    <comp lib="1" loc="(290,530)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(410,530)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="0" loc="(350,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="1" loc="(530,530)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(831,420)" name="Text">
      <a name="text" val="1 1 1 |        1"/>
    </comp>
    <comp lib="2" loc="(418,151)" name="Text">
      <a name="text" val="Output Bit"/>
    </comp>
    <comp lib="1" loc="(350,400)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(540,57)" name="Text">
      <a name="text" val="the output = 1 if an odd number of inputs (1 or 3) are 1, otherwise 0"/>
    </comp>
    <comp lib="0" loc="(490,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Z"/>
    </comp>
    <comp lib="2" loc="(830,324)" name="Text">
      <a name="text" val="0 0 1 |       1"/>
    </comp>
    <comp lib="2" loc="(554,78)" name="Text">
      <a name="text" val="ONLY use: NOT, AND, OR, and any custom functions you write (included in the .circ submission)"/>
    </comp>
    <comp lib="2" loc="(831,380)" name="Text">
      <a name="text" val="0 1 1 |       0"/>
    </comp>
    <comp lib="2" loc="(841,242)" name="Text">
      <a name="text" val="f(x,y,z) = \bar[x]\bar[y]\bar[z] + \bar[x]\bar[y]z + \bar[x]y\bar[z] + x\bar[y]\bar[z] + xyz"/>
    </comp>
  </circuit>
</project>
